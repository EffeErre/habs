Index: archhaskell-habs/haskell-buildwrapper/src/buildwrapper-0.7.0/src/Language/Haskell/BuildWrapper/GHC.hs
===================================================================
--- archhaskell-habs.orig/haskell-buildwrapper/src/buildwrapper-0.7.0/src/Language/Haskell/BuildWrapper/GHC.hs
+++ archhaskell-habs/haskell-buildwrapper/src/buildwrapper-0.7.0/src/Language/Haskell/BuildWrapper/GHC.hs
@@ -66,7 +66,8 @@ import Module (moduleNameFS)
 -- import System.Time (getClockTime, diffClockTimes, timeDiffToString)
 import System.IO (hFlush, stdout)
 import System.Directory (getModificationTime)
-import System.Time (ClockTime(TOD))
+import Data.Time.Clock (UTCTime(UTCTime))
+import Data.Time.Calendar (Day(ModifiedJulianDay))
 
 type GHCApplyFunction a=FilePath -> TypecheckedModule -> Ghc a
 
@@ -341,13 +342,13 @@ getGhcNameDefsInScopeLongRunning  :: Fil
         -> [String] -- ^ build options
         -> IO ()
 getGhcNameDefsInScopeLongRunning fp base_dir modul options=do
-        initGHC (go (TOD 0 0)) options
+        initGHC (go (UTCTime (ModifiedJulianDay 0) 0)) options
         where 
-                go :: ClockTime -> Ghc ()
+                go :: UTCTime -> Ghc ()
                 go t1 = do
                         t2<- GMU.liftIO $ getModificationTime fp
                         let hasLoaded=case t1 of
-                                TOD 0 _ -> False
+                                UTCTime (ModifiedJulianDay 0) _ -> False
                                 _ -> True
                         (ns1,add2)<-if hasLoaded && t2==t1 then -- modification time is only precise to the second in GHC 7.6 or above, see http://hackage.haskell.org/trac/ghc/ticket/7473
                                 (do 
@@ -1233,4 +1234,4 @@ ghcCleanImports f base_dir modul options
                         formatInfo=foldr getFormatInfo (0,0,0,0,0) fivs
                         in map (formatImport formatInfo) fivs
                         
-                       
\ No newline at end of file
+                       
